generator client {
    provider = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


model User {
    id        String   @id @default(uuid())
    name      String?
    username  String?   @unique
    password  String?
    email     String?   @unique
    emailVerified DateTime? @map("email_verified")
    image       String?
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    isAdmin Boolean @default(false) @map("is_admin")
    isActive Boolean @default(true) @map("is_active")

    accounts Account[]
    sessions Session[]
    Authenticator Authenticator[]

    @@map("users")
}

model Account {
    id String @id @default(uuid())
    userId String @map("user_id")
    type String @map("type")
    provider String @map("provider")
    providerAccountId String @map("provider_account_id")
    refresh_token String? @map("refresh_token") @db.Text
    access_token String? @map("access_token") @db.Text
    expires_at Int? @map("expires_at")
    token_type String? @map("token_type")
    scope String? @map("scope")
    id_token String? @map("id_token") @db.Text
    session_state String? @map("session_state")
    refresh_token_expires_at Int? @map("refresh_token_expires_in")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    
    user User @relation(fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
    @@index([userId])

    @@map("accounts")
}

model Session {
    id String @id @default(uuid())
    sessionToken String @unique @map("session_token")
    userId String @map("user_id")
    expires DateTime
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    user User @relation(fields: [userId], references: [id])

    @@index([userId])
    @@map("sessions")
}

model VerificationToken {
    identifier String
    token String @unique
    expires DateTime

    @@unique([identifier, token])
    @@map("verification_tokens")
}

model Authenticator {
    credentialID String @default(uuid())
    userId String @map("user_id")
    providerAccountId String @map("provider_account_id")
    credentialPublicKey String @map("credential_public_key")
    counter Int @map("counter")
    credentialDeviceType String @map("credential_device_type")
    credentialBackedUp Boolean @map("credential_backed_up")
    transports String? @map("transports")

    user User @relation(fields: [userId], references: [id])

    @@id([userId, credentialID])
    @@map("authenticators")
}